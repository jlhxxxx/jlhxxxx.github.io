<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>AMAN's BLOG - Software</title><link href="https://jlhxxxx.github.io/" rel="alternate"></link><link href="https://jlhxxxx.github.io/feeds/software.atom.xml" rel="self"></link><id>https://jlhxxxx.github.io/</id><updated>2018-05-02T00:00:00+08:00</updated><entry><title>win10下安装CentOS双系统</title><link href="https://jlhxxxx.github.io/win-install-centos.html" rel="alternate"></link><published>2018-05-02T00:00:00+08:00</published><updated>2018-05-02T00:00:00+08:00</updated><author><name>Aman</name></author><id>tag:jlhxxxx.github.io,2018-05-02:/win-install-centos.html</id><summary type="html">&lt;p&gt;用惯了Windows，但是要学Linux，所以决定装个双系统。一开始装的是Ubuntu，傻瓜式安装，界面也漂亮，但是装软件时出现了依赖性问题，网上搜的方法大部分就一个&lt;code&gt;sudo apt-get -f install&lt;/code&gt;解决，但是我输完命令又出现校验和不符无法安装的问题，没有找到很好的解决办法（虽然我觉得可能是服务器的问题，当然我也没有很用力去找，只尝试了一晚上就放弃了）。一怒之下决定换个系统，Liunx系统那么多，总有一个适合自己的。&lt;/p&gt;
&lt;p&gt;百度了下，Linux系统大致分两类：一类是RedHat系列，包括RedHat、CentOS、Fedora等，包管理工具yum；另一类是Debian系列，包括Debian、Ubuntu等，包管理工具apt-get 。由于公司服务器用的是RedHat的，所以不想浪费时间，我决定找个RedHat系列的，其中CentOS稳定性最好，是大部分服务器的配置，那就尝试下吧。下面进入正题：&lt;/p&gt;
&lt;h2&gt;第一步：下载镜像文件&lt;/h2&gt;
&lt;p&gt;CentOS官方下载地址：&lt;a href="https://www.centos.org/download/"&gt;https://www.centos.org/download/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;CentOS官网上，提供了三种ISO镜像文件的下载：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;DVD …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;用惯了Windows，但是要学Linux，所以决定装个双系统。一开始装的是Ubuntu，傻瓜式安装，界面也漂亮，但是装软件时出现了依赖性问题，网上搜的方法大部分就一个&lt;code&gt;sudo apt-get -f install&lt;/code&gt;解决，但是我输完命令又出现校验和不符无法安装的问题，没有找到很好的解决办法（虽然我觉得可能是服务器的问题，当然我也没有很用力去找，只尝试了一晚上就放弃了）。一怒之下决定换个系统，Liunx系统那么多，总有一个适合自己的。&lt;/p&gt;
&lt;p&gt;百度了下，Linux系统大致分两类：一类是RedHat系列，包括RedHat、CentOS、Fedora等，包管理工具yum；另一类是Debian系列，包括Debian、Ubuntu等，包管理工具apt-get 。由于公司服务器用的是RedHat的，所以不想浪费时间，我决定找个RedHat系列的，其中CentOS稳定性最好，是大部分服务器的配置，那就尝试下吧。下面进入正题：&lt;/p&gt;
&lt;h2&gt;第一步：下载镜像文件&lt;/h2&gt;
&lt;p&gt;CentOS官方下载地址：&lt;a href="https://www.centos.org/download/"&gt;https://www.centos.org/download/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;CentOS官网上，提供了三种ISO镜像文件的下载：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;DVD ISO：标准安装版，一般下载这个就可以了（推荐）&lt;/li&gt;
&lt;li&gt;Everything ISO：对完整版安装盘的软件进行补充，集成所有软件（包含CentOS7的一套完整的软件包，可以用来安装系统或者填充本地镜像）&lt;/li&gt;
&lt;li&gt;Minimal ISO：迷你版，小巧、安装快速、自带的软件少&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;第二步：在Windows中为Linux分出磁盘空间&lt;/h2&gt;
&lt;p&gt;这个不做详细介绍，方法很多。可以用DiskGenius拆分原系统分区，之后删除要分给Linux的分区即可，不需要格式化。我的是500G固态硬盘，分了200G给Linux。&lt;/p&gt;
&lt;h2&gt;第三步：制作U盘启动盘&lt;/h2&gt;
&lt;p&gt;这里推荐使用UltraISO，首先&lt;strong&gt;打开&lt;/strong&gt;镜像文件，然后&lt;strong&gt;启动--写入硬盘映像&lt;/strong&gt;，选择U盘，写入方式默认的&lt;strong&gt;USB-HDD+&lt;/strong&gt;即可，然后执行&lt;strong&gt;写入&lt;/strong&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;之前我用的是Universal-USB-Installer，可能兼容性不太好，在安装的时候出现&lt;strong&gt;设置基础软件仓库时出错&lt;/strong&gt;，换成UltraISO问题解决。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;第四步：利用U盘引导（重点）&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;重启电脑后，进入boot界面，选择USB启动，进入CentOS初始界面：&lt;/p&gt;
&lt;p&gt;&lt;img alt="win10-install-centos-01.jpg" src="https://github.com/jlhxxxx/imgur/blob/master/blog/win10-install-centos-01.jpg?raw=true"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;这里不管怎么选择都是安装不了的，因为默认的安装路径不是U盘，所以需要手动指定，注意那行提示：&lt;code&gt;Press Tab for full configuration...&lt;/code&gt;，UEFI引导的电脑显示的是&lt;code&gt;Press e for full configuration...&lt;/code&gt;。按&lt;code&gt;Tab&lt;/code&gt;或&lt;code&gt;e&lt;/code&gt;进入配置界面，配置界面大概三行文字，我们只要修改第二行带&lt;code&gt;inst.stage2=hd..&lt;/code&gt;的就好。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;setparams &lt;span class="s2"&gt;&amp;quot;Install CentOS 7&amp;quot;&lt;/span&gt; Install
    limuze /image/vmlinuz inst.stage2&lt;span class="o"&gt;=&lt;/span&gt;hd:LABEL&lt;span class="o"&gt;=&lt;/span&gt;CentOS&lt;span class="se"&gt;\x&lt;/span&gt;&lt;span class="m"&gt;207&lt;/span&gt;&lt;span class="se"&gt;\x&lt;/span&gt;20x86_64 quiet  
    initrdefi /image/pxeboot/initrd.img
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这时候我们并不知道U盘盘符，所以要先查询一下，将第二行从&lt;code&gt;inst.stage2=hd...&lt;/code&gt;开始改成&lt;code&gt;linux dd quiet&lt;/code&gt; :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;setparams &lt;span class="s2"&gt;&amp;quot;Install CentOS 7&amp;quot;&lt;/span&gt; Install
  limuze /image/vmlinuz linux dd quiet
  initrdefi /image/pxeboot/initrd.img
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;接下来按&lt;code&gt;Ctrl+x&lt;/code&gt;执行，就可以看到所有盘符和编号了，大概是这样的：&lt;/p&gt;
&lt;p&gt;&lt;img alt="win10-install-centos-02.png" src="https://github.com/jlhxxxx/imgur/blob/master/blog/win10-install-centos-02.png?raw=true"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;可以看到，CentOS镜像的位置（也就是我的U盘）是sdb4。记住这个sdb4。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;然后强行关机重新U盘引导，进入CentOS配置界面，这次将第二行改成：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;limuze /image/vmlinuz inst.stage2&lt;span class="o"&gt;=&lt;/span&gt;hd:/dev/sdb4
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;接下来按&lt;code&gt;Ctrl+x&lt;/code&gt;执行，进入安装界面。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;第四步：安装系统（重点）&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;安装界面如图，这里最好选择英文，这样系统装好之后才不会出现&lt;code&gt;桌面&lt;/code&gt;、&lt;code&gt;下载&lt;/code&gt;等中文名称的目录，装好系统之后再改成中文就好。&lt;/p&gt;
&lt;p&gt;&lt;img alt="win10-install-centos-03.jpg" src="https://github.com/jlhxxxx/imgur/blob/master/blog/win10-install-centos-03.jpg?raw=true"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;软件选择，如果需要桌面系统，选择GNOME或KDE都可以，否则默认安装是最小安装模式：&lt;/p&gt;
&lt;p&gt;&lt;img alt="win10-install-centos-04.png" src="https://github.com/jlhxxxx/imgur/blob/master/blog/win10-install-centos-04.png?raw=true"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;配置安装位置，注意选择第二步中分出来的空闲磁盘：&lt;/p&gt;
&lt;p&gt;&lt;img alt="win10-install-centos-05.png" src="https://github.com/jlhxxxx/imgur/blob/master/blog/win10-install-centos-05.png?raw=true"&gt;&lt;/p&gt;
&lt;p&gt;进入手动分区界面，不想思考的话选择自动创建就好：&lt;/p&gt;
&lt;p&gt;&lt;img alt="win10-install-centos-06.png" src="https://github.com/jlhxxxx/imgur/blob/master/blog/win10-install-centos-06.png?raw=true"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;配置好后，开始安装，安装完毕设置下root账户密码，再创建个用户就好。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;第五步：配置启动项&lt;/h2&gt;
&lt;h3&gt;参考文章&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.linuxidc.com/Linux/2016-06/132051.htm"&gt;Win10下安装CentOS 7双系统详解&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="Linux"></category><category term="CentOS"></category></entry><entry><title>搬瓦工SS教程</title><link href="https://jlhxxxx.github.io/banwagong-ss.html" rel="alternate"></link><published>2018-04-25T00:00:00+08:00</published><updated>2018-04-25T00:00:00+08:00</updated><author><name>Aman</name></author><id>tag:jlhxxxx.github.io,2018-04-25:/banwagong-ss.html</id><summary type="html">&lt;p&gt;之前一直折腾免费的翻墙软件，免费软件唯一的优点就是免费。但是从另一种角度来说，免费软件其实也蛮贵的。商业社会，时间宝贵，现在我更注重效率，尽量在时间和金钱上取一个平衡吧。由于首次操作，所以试了下年付$19.9最便宜的套餐，加上优惠码，折合人民币每个月10块钱，十块钱，买不了吃亏买不了上当，还因为可以用支付宝付款，挺方便的。切换CN2机房后年流量为188G，我觉得对于非视频用户来说应该是够用了。&lt;/p&gt;
&lt;h2&gt;一、套餐选购&lt;/h2&gt;
&lt;p&gt;搬瓦工主页：&lt;a href="https://bwh1.net/"&gt;地址1&lt;/a&gt;、&lt;a href="https://bandwagonhost.com/"&gt;地址2&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://zhuanlan.zhihu.com/p/32811900"&gt;搬瓦工2018年新手选购指南&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.bandwagonhost.net/"&gt;搬瓦工中文网&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://banwagong.cn/"&gt;搬瓦工VPS中文网&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注意如果是未注册用户，不要先注册再购买，因为新注册的时候需要输入验证码，而验证码是需要翻墙才能看到的，直接购买就能顺便注册。除了邮箱和密码，其他信息随便填就好了。&lt;/p&gt;
&lt;p&gt;购买之后邮箱里会收到几封邮件，告诉你IP address，SSH Port，和初始密码，不过都不需要记，IP和Port进入服务器控制面板就能看到，密码可以随时重新生成。&lt;/p&gt;
&lt;h2&gt;二、安装Shadowsocks&lt;/h2&gt;
&lt;p&gt;参考教程：&lt;a href="https://www.cnlinode.com/ban_wa_gong_qu_xiao_le_yi_jian_an_zhuang_shadowsocks_zui_xin_ban_wa_gong_ss_jiao_cheng/"&gt;搬瓦工取消了一键安装Shadowsocks，最新搬瓦工SS教程&lt;/a&gt;第二步方法二 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;之前一直折腾免费的翻墙软件，免费软件唯一的优点就是免费。但是从另一种角度来说，免费软件其实也蛮贵的。商业社会，时间宝贵，现在我更注重效率，尽量在时间和金钱上取一个平衡吧。由于首次操作，所以试了下年付$19.9最便宜的套餐，加上优惠码，折合人民币每个月10块钱，十块钱，买不了吃亏买不了上当，还因为可以用支付宝付款，挺方便的。切换CN2机房后年流量为188G，我觉得对于非视频用户来说应该是够用了。&lt;/p&gt;
&lt;h2&gt;一、套餐选购&lt;/h2&gt;
&lt;p&gt;搬瓦工主页：&lt;a href="https://bwh1.net/"&gt;地址1&lt;/a&gt;、&lt;a href="https://bandwagonhost.com/"&gt;地址2&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://zhuanlan.zhihu.com/p/32811900"&gt;搬瓦工2018年新手选购指南&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.bandwagonhost.net/"&gt;搬瓦工中文网&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://banwagong.cn/"&gt;搬瓦工VPS中文网&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注意如果是未注册用户，不要先注册再购买，因为新注册的时候需要输入验证码，而验证码是需要翻墙才能看到的，直接购买就能顺便注册。除了邮箱和密码，其他信息随便填就好了。&lt;/p&gt;
&lt;p&gt;购买之后邮箱里会收到几封邮件，告诉你IP address，SSH Port，和初始密码，不过都不需要记，IP和Port进入服务器控制面板就能看到，密码可以随时重新生成。&lt;/p&gt;
&lt;h2&gt;二、安装Shadowsocks&lt;/h2&gt;
&lt;p&gt;参考教程：&lt;a href="https://www.cnlinode.com/ban_wa_gong_qu_xiao_le_yi_jian_an_zhuang_shadowsocks_zui_xin_ban_wa_gong_ss_jiao_cheng/"&gt;搬瓦工取消了一键安装Shadowsocks，最新搬瓦工SS教程&lt;/a&gt;第二步方法二。&lt;/p&gt;
&lt;p&gt;登录网站后，地址栏输入&lt;code&gt;https://kiwivm.64clouds.com/preloader.php?load=/main-exec.php?mode=extras_shadowsocks&lt;/code&gt;进入隐藏的Shadowsocks Server，傻瓜式一键安装，安装好之后页面会显示Shadowsocks的参数及软件下载地址。&lt;/p&gt;
&lt;p&gt;下载对应系统的Shadowsocks，配置好相应服务器参数，&lt;strong&gt;启用系统代理&lt;/strong&gt;，系统代理选择&lt;strong&gt;pac模式&lt;/strong&gt;。如果想更专业一点，还可以配合SwitchyOmega使用，具体教程参考&lt;a href="https://blog.csdn.net/shouldnotappearcalm/article/details/77900399"&gt;shadowsocks配合chrome插件SwitchyOmega&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;这里要注意如果你已经安装了SwitchyOmega并且有相应配置，一定不要直接导入配置（会覆盖），手动配置也很简单，主要就是配一个规则列表地址：&lt;code&gt;https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt&lt;/code&gt;。&lt;/p&gt;
&lt;h2&gt;三、优化&lt;/h2&gt;
&lt;p&gt;到第二步已经可以访问外网了，如果觉得访问速度比较慢，还有一些优化办法。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;切换机房（注意购买的套餐必须是可以切换机房的）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://www.bandwagonhost.net/1314.html"&gt;切换到CN2&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;安装BBR&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://www.bandwagonhost.net/268.html"&gt;搬瓦工 VPS 安装并开启 Google BBR 教程（KVM / OpenVZ）&lt;/a&gt;&lt;/p&gt;</content><category term="Shadowsocks"></category><category term="Bandwagon"></category></entry><entry><title>windows下用Pelican+GitHub搭建静态博客</title><link href="https://jlhxxxx.github.io/pelican-github.html" rel="alternate"></link><published>2018-04-16T00:00:00+08:00</published><updated>2018-04-16T00:00:00+08:00</updated><author><name>Aman</name></author><id>tag:jlhxxxx.github.io,2018-04-16:/pelican-github.html</id><summary type="html">&lt;h2&gt;一、使用GitHub Pages创建个人博客页面&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;首先到GitHub进行账号注册：&lt;a href="https://github.com/"&gt;https://github.com/&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;创建新仓库，不用新建readme.md，注意仓库名使用&lt;em&gt;username.github.io&lt;/em&gt;的格式，这里&lt;em&gt;username&lt;/em&gt;改成自己的用户名。&lt;/li&gt;
&lt;li&gt;创建SSH密钥并上传到GitHub。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;二、安装Python、Pelican、Markdown和make&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;安装Python。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安装Pelican。建议在虚拟环境virtualenv下使用。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;安装virtualenv（可选）&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install virtualenv
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;为了使用virtualenv更方便，可以借助 virtualenvwrapper（可选）&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install virtualenvwrapper-win
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;配置虚拟环境目录，默认创建的虚拟环境位于&lt;strong&gt;C:\Users\username\&lt;/strong&gt;下，可以通过环境变量 &lt;code&gt;WORKON_HOME&lt;/code&gt; 来定制。&lt;/p&gt;
&lt;p&gt;通过&lt;strong&gt;计算机--&amp;gt;属性-- …&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;h2&gt;一、使用GitHub Pages创建个人博客页面&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;首先到GitHub进行账号注册：&lt;a href="https://github.com/"&gt;https://github.com/&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;创建新仓库，不用新建readme.md，注意仓库名使用&lt;em&gt;username.github.io&lt;/em&gt;的格式，这里&lt;em&gt;username&lt;/em&gt;改成自己的用户名。&lt;/li&gt;
&lt;li&gt;创建SSH密钥并上传到GitHub。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;二、安装Python、Pelican、Markdown和make&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;安装Python。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安装Pelican。建议在虚拟环境virtualenv下使用。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;安装virtualenv（可选）&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install virtualenv
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;为了使用virtualenv更方便，可以借助 virtualenvwrapper（可选）&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install virtualenvwrapper-win
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;配置虚拟环境目录，默认创建的虚拟环境位于&lt;strong&gt;C:\Users\username\&lt;/strong&gt;下，可以通过环境变量 &lt;code&gt;WORKON_HOME&lt;/code&gt; 来定制。&lt;/p&gt;
&lt;p&gt;通过&lt;strong&gt;计算机--&amp;gt;属性--&amp;gt;高级系统设置--&amp;gt;环境变量--&amp;gt;系统变量&lt;/strong&gt;中新建“&lt;strong&gt;变量名&lt;/strong&gt;”：&lt;code&gt;WORKON_HOME&lt;/code&gt;，&lt;strong&gt;变量值&lt;/strong&gt;：&lt;code&gt;你自定义的路径&lt;/code&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;创建并激活虚拟环境（可选）&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mkvirtualenv pelican
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;常用命令：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# 激活虚拟环境
workon {虚拟环境目录}
# 停止虚拟环境
deactivate
# 进入虚拟环境目录
cdvirtualenv
# 列出所有虚拟环境
lsvirtualenv
# 检查虚拟环境是否激活（其他方法也可）
pip list
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安装pelican&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install pelican
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安装markdown&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install markdown
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安装make并设置好环境变量&lt;a href="http://gnuwin32.sourceforge.net/packages/make.htm"&gt;下载地址&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;三、创建博客骨架&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;搭建博客目录（若使用虚拟环境必须在激活虚拟环境前提下执行下列命令，blog文件夹不需要在虚拟环境文件夹下）：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;mkdir&lt;/span&gt; &lt;span class="n"&gt;blog&lt;/span&gt;
&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="n"&gt;blog&lt;/span&gt;
&lt;span class="n"&gt;pelican-quickstart&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;quickstart并非必须，如果想要使用非默认主题，可以下载对应主题的demo，解压至博客目录，然后按照下面的步骤修改相应的Makefile和pelicanconf.py即可，主题和插件下载建议使用&lt;code&gt;git clone&lt;/code&gt;命令，方便以后更新。
2. 根据提示一步步输入相应的配置项，不知道如何设置的接受默认即可，后续可以通过编辑pelicanconf.py文件更改配置。完成后将会在根目录生成以下文件：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="o"&gt;|--&lt;/span&gt; &lt;span class="n"&gt;content&lt;/span&gt;                &lt;span class="c1"&gt;# 所有文章放于此目录&lt;/span&gt;
&lt;span class="err"&gt;│&lt;/span&gt;   &lt;span class="err"&gt;└──&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pages&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;            &lt;span class="c1"&gt;# 存放手工创建的静态页面&lt;/span&gt;
&lt;span class="o"&gt;|--&lt;/span&gt; &lt;span class="n"&gt;develop_server&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;      &lt;span class="c1"&gt;# 用于开启测试服务器&lt;/span&gt;
&lt;span class="o"&gt;|--&lt;/span&gt; &lt;span class="n"&gt;Makefile&lt;/span&gt;               &lt;span class="c1"&gt;# 方便管理博客的Makefile&lt;/span&gt;
&lt;span class="o"&gt;|--&lt;/span&gt; &lt;span class="n"&gt;output&lt;/span&gt;                 &lt;span class="c1"&gt;# 静态生成文件&lt;/span&gt;
&lt;span class="o"&gt;|--&lt;/span&gt; &lt;span class="n"&gt;plugins&lt;/span&gt;                &lt;span class="c1"&gt;# 插件（自己另外下载）&lt;/span&gt;
&lt;span class="o"&gt;|--&lt;/span&gt; &lt;span class="n"&gt;themes&lt;/span&gt;                 &lt;span class="c1"&gt;# 主题（自己另外下载）&lt;/span&gt;
&lt;span class="o"&gt;|--&lt;/span&gt; &lt;span class="n"&gt;pelicanconf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;         &lt;span class="c1"&gt;# 配置文件&lt;/span&gt;
&lt;span class="o"&gt;|--&lt;/span&gt; &lt;span class="n"&gt;publishconf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;         &lt;span class="c1"&gt;# 配置文件&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;进入output文件夹，把自己刚刚建好的username.github.io版本库clone下来，注意使用SSH方式，这里以及后文中的username要替换成自己的GitHub用户名：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="n"&gt;output&lt;/span&gt;
&lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;clone&lt;/span&gt; &lt;span class="n"&gt;git&lt;/span&gt;&lt;span class="nv"&gt;@github&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;io&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;git&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;设置一键上传部署到GitHub。打开根目录下的Makefile文件，修改以下三个地方，设置完后，以后写完文章就可以通过在blog根目录下执行&lt;code&gt;make github&lt;/code&gt;进行&lt;strong&gt;一键部署&lt;/strong&gt;了。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;OUTPUTDIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;BASEDIR&lt;span class="k"&gt;)&lt;/span&gt;/output/username.github.io    
&lt;span class="nf"&gt;publish&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;    
    &lt;span class="k"&gt;$(&lt;/span&gt;PELICAN&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;INPUTDIR&lt;span class="k"&gt;)&lt;/span&gt; -o &lt;span class="k"&gt;$(&lt;/span&gt;OUTPUTDIR&lt;span class="k"&gt;)&lt;/span&gt; -s &lt;span class="k"&gt;$(&lt;/span&gt;CONFFILE&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;PELICANOPTS&lt;span class="k"&gt;)&lt;/span&gt;    
&lt;span class="nf"&gt;github&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;publish&lt;/span&gt;    
    &lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;OUTPUTDIR&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; git add . &lt;span class="p"&gt;;&lt;/span&gt; git commit -am &lt;span class="s1"&gt;&amp;#39;your comments&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; git push
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;四、通过Markdown试写博文并上传GitHub发布&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;创建一个页面：这里以创建 About页面为例。在content目录创建pages子目录：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;mkdir&lt;/span&gt; &lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pages&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;然后创建About.md并填入下面内容（一定要有title）：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;About&lt;/span&gt; &lt;span class="n"&gt;Me&lt;/span&gt;        
&lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2013&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;04&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;18&lt;/span&gt;

&lt;span class="n"&gt;About&lt;/span&gt; &lt;span class="n"&gt;me&lt;/span&gt; &lt;span class="n"&gt;content&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;相关介绍请参见&lt;a href="http://pelican-zh.readthedocs.org/en/latest/zh-cn/"&gt;官方文档。&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;创建导航目录项：Menu Item设置。在你的博客中，可设置相应的菜单项，菜单项是通过pelicanconf.py设置的，具体如下所示：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;MENUITEMS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;((&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ITEM1&amp;quot;&lt;/span&gt;,&lt;span class="s2"&gt;&amp;quot;http://github.com&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;,
             &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ITEM2&amp;quot;&lt;/span&gt;,URL&lt;span class="o"&gt;)&lt;/span&gt;,
            ......&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在Makefile目录下执行以下命令，即可在本机http://127.0.0.1:8000看到效果。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;make&lt;/span&gt; &lt;span class="err"&gt;publish&lt;/span&gt;
&lt;span class="err"&gt;make&lt;/span&gt; &lt;span class="err"&gt;serve&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;五、安装主题&lt;/h2&gt;
&lt;p&gt;主题下载好后，对应在在pelicanconf.py中添加主题选择条目，&lt;a href="https://github.com/getpelican/pelican-themes"&gt;主题下载地址&lt;/a&gt;，这里我选用的是&lt;a href="https://github.com/jsliang/pelican-fresh/tree/ce1afc067931bb571a0f5970366a2e7d733d0d6a"&gt;fresh&lt;/a&gt;主题。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;THEME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;主题目录（相对或绝对路径）&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;推荐主题：&lt;a href="https://github.com/talha131/pelican-elegant/tree/44c8fbcfe631784f84c8b92b7273280b3c956182"&gt;elegant&lt;/a&gt;，&lt;a href="https://github.com/getpelican/pelican-themes/tree/master/pelican-bootstrap3"&gt;pelican-bootstrap3&lt;/a&gt; ，&lt;a href="https://github.com/jsliang/pelican-fresh/tree/ce1afc067931bb571a0f5970366a2e7d733d0d6a"&gt;fresh&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;六、添加第三方评论系统&lt;/h2&gt;
&lt;p&gt;由于Disqus需要翻墙，而国内又没有什么比较好的第三方评论系统，网上搜了一堆，最后决定用github issues来实现。本来想用&lt;a href="https://github.com/imsun/gitment"&gt;gitment&lt;/a&gt;的，但是不知道哪里配置问题，无法初始化issue，然后用的是&lt;a href="https://github.com/gitalk/gitalk"&gt;gitalk&lt;/a&gt;，界面也比gitment好看。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;gitalk&lt;/p&gt;
&lt;p&gt;直接到theme--tempaltes下，参考gitalk配置，新建gitalk.html，这里我稍微配置了个环境变量&lt;code&gt;GITALK_OWNER&lt;/code&gt;。而且我的&lt;code&gt;repo&lt;/code&gt;没有选择博客文件所在仓库，而是另外建了一个仓库，注意&lt;code&gt;createIssueManually&lt;/code&gt;最好设置为&lt;code&gt;true&lt;/code&gt;，这样文章发表之后在评论处点击初始化就可以自动生成一个issue，当然每篇文章都要点一下。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;{% if GITALK_OWNER %}
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;link&lt;/span&gt; &lt;span class="na"&gt;rel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;stylesheet&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;gitalk-container&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;gitalk_owner&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{{ GITALK_OWNER }}&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;gitalk&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Gitalk&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="nx"&gt;clientID&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;a61......&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nx"&gt;clientSecret&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;38c......&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nx"&gt;repo&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;comments&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nx"&gt;owner&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;gitalk_owner&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nx"&gt;admin&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;gitalk_owner&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
      &lt;span class="nx"&gt;distractionFreeMode&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="c1"&gt;// Facebook-like distraction free mode&lt;/span&gt;
      &lt;span class="nx"&gt;createIssueManually&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;

    &lt;span class="nx"&gt;gitalk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;gitalk-container&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
{% endif %}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;然后打开article.html，找到&lt;code&gt;{% if DISQUS_SITENAME %}&lt;/code&gt;这行，从这之后开始修改：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;{% if COMMENT %}
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;comments&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h2&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Comments&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h2&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    {% include &amp;#39;gitalk.html&amp;#39; %}
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
{% endif %}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;第一行这里不用disqus，所以改成&lt;code&gt;{% if COMMENT %}&lt;/code&gt;，主要就是加了这么一行&lt;code&gt;{% include 'gitalk.html' %}&lt;/code&gt;。记得在pelicanconf.py文件中要配置&lt;code&gt;COMMENT = True&lt;/code&gt;和&lt;code&gt;GITALK_OWNER&lt;/code&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;disqus&lt;/p&gt;
&lt;p&gt;这个配置相对简单。首先到&lt;a href="https://disqus.com/"&gt;disqus&lt;/a&gt;注册账号；&lt;strong&gt;create a new site&lt;/strong&gt;，记住你填的&lt;code&gt;shortname&lt;/code&gt;；然后选择新建的&lt;strong&gt;site&lt;/strong&gt;，&lt;strong&gt;Installing Disqus&lt;/strong&gt;，下一步下一步把代码复制出来；然后在theme--tempaltes下，新建disqus.html，把刚才代码粘贴进去去掉注释，增加头部&lt;code&gt;{% if DISQUS_SITENAME %}&lt;/code&gt;尾部&lt;code&gt;{% endif %}&lt;/code&gt;和&lt;code&gt;DISQUS_SITENAME&lt;/code&gt;变量，最后就变成这样：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;{% if DISQUS_SITENAME %}
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;disqus_thread&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;disqus_shortname&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{{ DISQUS_SITENAME }}&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="c1"&gt;// DON&amp;#39;T EDIT BELOW THIS LINE&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;script&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;src&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;disqus_shortname&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;.disqus.com/embed.js&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;;&lt;/span&gt;
    &lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;data-timestamp&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;head&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;})();&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;noscript&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Please enable JavaScript to view the &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://disqus.com/?ref_noscript&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;comments powered by Disqus.&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;noscript&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
{% endif %}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;然后修改article.html，同gitalk一样，在&lt;code&gt;&amp;lt;h2&amp;gt;Comments&amp;lt;/h2&amp;gt;&lt;/code&gt;后加上一行&lt;code&gt;{% include 'disqus.html' %}&lt;/code&gt;。最后只需在pelicanconf.py文件中配置&lt;code&gt;DISQUS_SITENAME = 'shortname'&lt;/code&gt;即可启用disqus。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;七、添加Webmaster&lt;/h2&gt;
&lt;p&gt;为了让博客能在网上被搜索到，需要搜索引擎将网站收录，所以要添加Webmaster。这里我添加了Google和Bing收录，因为GitHub屏蔽了百度网站爬虫，所以除非你搭建在自己的服务器上，否则是没办法添加百度收录的。&lt;/p&gt;
&lt;p&gt;下面以Bing收录为例，首先打开&lt;a href="https://www.bing.com/toolbox/webmaster/"&gt;Bing网站管理员工具&lt;/a&gt;，用Microsoft账号登录，都是中文界面，按照说明添加网站并验证通过。&lt;/p&gt;
&lt;p&gt;然后准备sitemap，到博客主目录下，执行：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git clone git://github.com/getpelican/pelican-plugins.git
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在pelicanconf.py里配置如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;PLUGIN_PATHS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;pelican-plugins&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,]&lt;/span&gt;
&lt;span class="n"&gt;PLUGINS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;sitemap&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;SITEMAP&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;format&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;xml&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;priorities&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;articles&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;indexes&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;pages&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;changefreqs&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;articles&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;monthly&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;indexes&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;daily&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;pages&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;monthly&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;然后&lt;code&gt;make html&lt;/code&gt;在output目录下可以看到已经生成了网站的sitemap；&lt;code&gt;make github&lt;/code&gt;后，提交网站sitemap地址到到Bing Webmaster：&lt;code&gt;https://username.github.io/sitemap.xml&lt;/code&gt;。&lt;/p&gt;
&lt;h2&gt;八、添加站内搜索&lt;/h2&gt;
&lt;p&gt;这一步必须建立在第七步前提下，否则是搜不到东西的。以添加Bing站内搜索为例：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;打开&lt;a href="https://www.customsearch.ai/"&gt;Bing Custom Search&lt;/a&gt;，选择&lt;strong&gt;New Instance；&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;然后在&lt;strong&gt;Definition Editor&lt;/strong&gt;下添加自己的网站，添加好后，可以在右侧尝试搜索一下（前提是第七步，不知道为什么我在Bing上已经能搜索到自己的网站了，然而站内搜索始终搜不到内容，换成Google就没有问题，但是Google要fq，流程上都差不多，所以这里以Bing为例）；&lt;/li&gt;
&lt;li&gt;第三步&lt;strong&gt;API EndPoint&lt;/strong&gt;，&lt;strong&gt;Query&lt;/strong&gt;为自定义API名称可以任意，&lt;strong&gt;Subscription Key&lt;/strong&gt;可以选择申请一个免费的&lt;strong&gt;Issue free trial key&lt;/strong&gt;，注意要申请Custom Search API，填完之后记得&lt;strong&gt;Call&lt;/strong&gt;一下，看看返回值是否正确，有问题检查你的key；&lt;/li&gt;
&lt;li&gt;第四步&lt;strong&gt;Hosted UI&lt;/strong&gt;下选择搜索框的样式，填入第三步的key。保存之后将下面的代码复制出来，粘贴到任意你想添加搜索框的地方。因为fresh主题自带Google站内搜索，所以这里我取了个巧，直接套用Google的CSS。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;添加Google站内搜索就更简单，到&lt;a href="https://cse.google.com/"&gt;Google站内搜索&lt;/a&gt;网站上申请一个ID，调整好样式后将ID添加到pelicanconf.py即可：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;GOOGLE_CUSTOM_SEARCH_SIDEBAR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;your ID&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;九、添加分享按钮&lt;/h2&gt;
&lt;p&gt;fresh主题自带&lt;a href="http://www.sharethis.com/"&gt;ShareThis&lt;/a&gt;分享功能，申请账号并将ShareThis Pub Key添加到pelicanconf.py中就可以使用，具体参考&lt;a href="https://github.com/jsliang/pelican-fresh/tree/ce1afc067931bb571a0f5970366a2e7d733d0d6a"&gt;官方文档&lt;/a&gt;。添加第三方的跟添加其他插件类似。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;SHARETHIS_PUB_KEY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;your ShareThis Pub Key&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;添加了分享按钮之后，网站加载速度变得很慢，所以最后我把这个功能关掉了，本来也用不上。对我来说，必要的功能有，其他越简单越好。&lt;/p&gt;
&lt;h2&gt;十、最重要的事&lt;/h2&gt;
&lt;p&gt;为了看起来完美，所以加了第十条。不过这确实也是最重要的，我觉得应该关心博客的内容而不是样式。&lt;/p&gt;
&lt;h3&gt;参考文章&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.cnblogs.com/suke99/p/5355894.html"&gt;windows下安装Python虚拟环境virtualenvwrapper-win&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.cnblogs.com/cciejh/p/blog_building.html"&gt;Pelican＋GitHub博客搭建详细教程&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="http://doc.okbase.net/WJ5888/archive/45851.html"&gt;pelican创建博客常见问题汇总&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="GitHub"></category><category term="Pelican"></category><category term="Blog"></category></entry></feed>